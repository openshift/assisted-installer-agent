# Builder Image
FROM registry.access.redhat.com/ubi8/ubi as builder

#################################################################################
# DNF Package Install List
ARG DNF_LIST="\
  jq \
  tar \
  gcc \
  make \
  git \
  gpgme-devel \
  libassuan-devel \
  wget \
"


#################################################################################
# Build UBI8 Builder with multi-arch support
RUN set -ex \
     && ARCH=$(arch | sed 's|x86_64|amd64|g' | sed 's|aarch64|arm64|g')         \
     && dnf install -y --nodocs --setopt=install_weak_deps=false ${DNF_LIST}    \
     && dnf clean all -y                                                        \
     && GO_VERSION=go1.19.5                                                     \
     && curl -sL https://golang.org/dl/${GO_VERSION}.linux-${ARCH}.tar.gz       \
        | tar xzvf - --directory /usr/local/                                    \
     && /usr/local/go/bin/go version                                            \
     && ln -f /usr/local/go/bin/go /usr/bin/go

#################################################################################
# Link gcc to /usr/bin/s390x-linux-gnu-gcc as go requires it on s390x
RUN [ "$(arch)" == "s390x" ]                                                    \
     && ln /usr/bin/gcc /usr/bin/s390x-linux-gnu-gcc                            \
     || echo "Not running on s390x, skip linking gcc binary"

WORKDIR /go/src/github.com/openshift/assisted-installer-agent
COPY . .
RUN make build

FROM quay.io/centos/centos:stream9
ARG TARGETPLATFORM
RUN if [[ "$TARGETPLATFORM" == "linux/amd64" || -z "$TARGETPLATFORM" ]] ; then  dnf install -y biosdevname dmidecode ; fi
RUN if [[ "$TARGETPLATFORM" == "linux/arm64" || -z "$TARGETPLATFORM" ]] ; then  dnf install -y dmidecode ; fi

RUN dnf install --setopt=install_weak_deps=False --setopt=tsdocs=False -y \
                findutils iputils \
                podman \
                # inventory
                ipmitool file fio \
                sg3_utils \
                # free_addresses
                nmap \
                # dhcp_lease_allocate
                dhclient \
                # logs_sender
                tar openssh-clients \
                # ntp_synchronizer
                chrony \
                && dnf update --setopt=install_weak_deps=False --setopt=tsdocs=False -y systemd && dnf clean all && rm -rf /var/cache

COPY --from=builder /go/src/github.com/openshift/assisted-installer-agent/build/agent /usr/bin/agent
COPY --from=builder /go/src/github.com/openshift/assisted-installer-agent/build/free_addresses /usr/bin/free_addresses
COPY --from=builder /go/src/github.com/openshift/assisted-installer-agent/build/inventory /usr/bin/inventory
COPY --from=builder /go/src/github.com/openshift/assisted-installer-agent/build/logs_sender /usr/bin/logs_sender
COPY --from=builder /go/src/github.com/openshift/assisted-installer-agent/build/next_step_runner /usr/bin/next_step_runner
COPY --from=builder /go/src/github.com/openshift/assisted-installer-agent/build/disk_speed_check /usr/bin/disk_speed_check

COPY scripts/installer/* /usr/local/bin/
