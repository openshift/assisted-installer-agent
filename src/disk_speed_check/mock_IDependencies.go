// Code generated by mockery v2.9.6. DO NOT EDIT.

package disk_speed_check

import mock "github.com/stretchr/testify/mock"

// MockIDependencies is an autogenerated mock type for the IDependencies type
type MockIDependencies struct {
	mock.Mock
}

// Execute provides a mock function with given fields: command, args
func (_m *MockIDependencies) Execute(command string, args ...string) (string, string, int) {
	_va := make([]interface{}, len(args))
	for _i := range args {
		_va[_i] = args[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, command)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, ...string) string); ok {
		r0 = rf(command, args...)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(string, ...string) string); ok {
		r1 = rf(command, args...)
	} else {
		r1 = ret.Get(1).(string)
	}

	var r2 int
	if rf, ok := ret.Get(2).(func(string, ...string) int); ok {
		r2 = rf(command, args...)
	} else {
		r2 = ret.Get(2).(int)
	}

	return r0, r1, r2
}

type mockConstructorTestingTNewMockIDependencies interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockIDependencies creates a new instance of MockIDependencies. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockIDependencies(t mockConstructorTestingTNewMockIDependencies) *MockIDependencies {
	mock := &MockIDependencies{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
