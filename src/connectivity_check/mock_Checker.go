// Code generated by mockery v2.39.1. DO NOT EDIT.

package connectivity_check

import (
	models "github.com/openshift/assisted-service/models"
	mock "github.com/stretchr/testify/mock"
)

// MockChecker is an autogenerated mock type for the Checker type
type MockChecker struct {
	mock.Mock
}

// Check provides a mock function with given fields: attributes
func (_m *MockChecker) Check(attributes Attributes) ResultReporter {
	ret := _m.Called(attributes)

	if len(ret) == 0 {
		panic("no return value specified for Check")
	}

	var r0 ResultReporter
	if rf, ok := ret.Get(0).(func(Attributes) ResultReporter); ok {
		r0 = rf(attributes)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ResultReporter)
		}
	}

	return r0
}

// Features provides a mock function with given fields:
func (_m *MockChecker) Features() Features {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Features")
	}

	var r0 Features
	if rf, ok := ret.Get(0).(func() Features); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(Features)
	}

	return r0
}

// Finalize provides a mock function with given fields: resultingHost
func (_m *MockChecker) Finalize(resultingHost *models.ConnectivityRemoteHost) {
	_m.Called(resultingHost)
}

// NewMockChecker creates a new instance of MockChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockChecker(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockChecker {
	mock := &MockChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
